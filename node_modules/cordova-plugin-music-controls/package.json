{
  "_args": [
    [
      "https://github.com/homerours/cordova-music-controls-plugin",
      "/opt/lampp/htdocs/ddn_new"
    ]
  ],
  "_from": "git+https://github.com/homerours/cordova-music-controls-plugin.git",
  "_id": "cordova-plugin-music-controls@2.1.4",
  "_inCache": true,
  "_installable": true,
  "_location": "/cordova-plugin-music-controls",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/homerours/cordova-music-controls-plugin/master/package.json",
      "gitUrl": "git://github.com/homerours/cordova-music-controls-plugin.git",
      "httpsUrl": "git+https://github.com/homerours/cordova-music-controls-plugin.git",
      "shortcut": "github:homerours/cordova-music-controls-plugin",
      "ssh": "git@github.com:homerours/cordova-music-controls-plugin.git",
      "sshUrl": "git+ssh://git@github.com/homerours/cordova-music-controls-plugin.git",
      "type": "github"
    },
    "name": null,
    "raw": "https://github.com/homerours/cordova-music-controls-plugin",
    "rawSpec": "https://github.com/homerours/cordova-music-controls-plugin",
    "scope": null,
    "spec": "git+https://github.com/homerours/cordova-music-controls-plugin.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/homerours/cordova-music-controls-plugin.git#e86d302f57f7fe85694a497d9d71a0c323850128",
  "_shasum": "34ecd787189801218b8fa9694c89b9f5300b1b1e",
  "_shrinkwrap": null,
  "_spec": "https://github.com/homerours/cordova-music-controls-plugin",
  "_where": "/opt/lampp/htdocs/ddn_new",
  "author": {
    "name": "homerours"
  },
  "bugs": {
    "url": "https://github.com/homerours/cordova-music-controls-plugin/issues"
  },
  "cordova": {
    "id": "cordova-plugin-music-controls",
    "platforms": [
      "android",
      "ios",
      "windows"
    ]
  },
  "dependencies": {},
  "description": "Music controls for Cordova apps",
  "devDependencies": {},
  "engines": [
    {
      "name": "cordova",
      "version": ">=3.4.0"
    }
  ],
  "gitHead": "e86d302f57f7fe85694a497d9d71a0c323850128",
  "homepage": "https://github.com/homerours/cordova-music-controls-plugin#readme",
  "keywords": [
    "controller",
    "controls",
    "cordova",
    "cordova-android",
    "cordova-windows",
    "ecosystem:cordova",
    "media",
    "music",
    "notification",
    "plugin"
  ],
  "license": "MIT",
  "name": "cordova-plugin-music-controls",
  "optionalDependencies": {},
  "readme": "# Cordova Music Controls Plugin\n\n<img src='https://imgur.com/fh3ACOq.png' width='564' height='342'>\n\nMusic controls for Cordova applications. Display a 'media' notification with play/pause, previous, next buttons, allowing the user to control the play. Handle also headset event (plug, unplug, headset button).\n\n## Supported platforms\n- Android (4.1+)\n- Windows (10+, by [filfat](https://github.com/filfat))\n- iOS 8+ (by [0505gonzalez](https://github.com/0505gonzalez))\n\n## Installation\n`cordova plugin add https://github.com/homerours/cordova-music-controls-plugin`\n\n## Methods\n- Create the media controls:\n```javascript\nMusicControls.create({\n    track       : 'Time is Running Out',\t\t// optional, default : ''\n\tartist      : 'Muse',\t\t\t\t\t\t// optional, default : ''\n    cover       : 'albums/absolution.jpg',\t\t// optional, default : nothing\n\t// cover can be a local path (use fullpath 'file:///storage/emulated/...', or only 'my_image.jpg' if my_image.jpg is in the www folder of your app)\n\t//\t\t\t or a remote url ('http://...', 'https://...', 'ftp://...')\n\tisPlaying   : true,\t\t\t\t\t\t\t// optional, default : true\n\tdismissable : true,\t\t\t\t\t\t\t// optional, default : false\n\n\t// hide previous/next/close buttons:\n\thasPrev   : false,\t\t// show previous button, optional, default: true\n\thasNext   : false,\t\t// show next button, optional, default: true\n\thasClose  : true,\t\t// show close button, optional, default: false\n\n\t// iOS only, optional\n\talbum       : 'Absolution',     // optional, default: ''\n\tduration : 60, // optional, default: 0\n\telapsed : 10, // optional, default: 0\n  \thasSkipForward : true, //optional, default: false. true value overrides hasNext.\n  \thasSkipBackward : true, //optional, default: false. true value overrides hasPrev.\n  \tskipForwardInterval : 15, //optional. default: 0.\n\tskipBackwardInterval : 15, //optional. default: 0.\n\thasScrubbing : false, //optional. default to false. Enable scrubbing from control center progress bar \n\n\t// Android only, optional\n\t// text displayed in the status bar when the notification (and the ticker) are updated\n\tticker\t  : 'Now playing \"Time is Running Out\"',\n\t//All icons default to their built-in android equivalents\n\t//The supplied drawable name, e.g. 'media_play', is the name of a drawable found under android/res/drawable* folders\n\tplayIcon: 'media_play',\n\tpauseIcon: 'media_pause',\n\tprevIcon: 'media_prev',\n\tnextIcon: 'media_next',\n\tcloseIcon: 'media_close',\n\tnotificationIcon: 'notification'\n}, onSuccess, onError);\n```\n\n- Destroy the media controller:\n```javascript\nMusicControls.destroy(onSuccess, onError);\n```\n\n- Subscribe events to the media controller:\n```javascript\nfunction events(action) {\n\n  const message = JSON.parse(action).message;\n\tswitch(message) {\n\t\tcase 'music-controls-next':\n\t\t\t// Do something\n\t\t\tbreak;\n\t\tcase 'music-controls-previous':\n\t\t\t// Do something\n\t\t\tbreak;\n\t\tcase 'music-controls-pause':\n\t\t\t// Do something\n\t\t\tbreak;\n\t\tcase 'music-controls-play':\n\t\t\t// Do something\n\t\t\tbreak;\n\t\tcase 'music-controls-destroy':\n\t\t\t// Do something\n\t\t\tbreak;\n\n\t\t// External controls (iOS only)\n    \tcase 'music-controls-toggle-play-pause' :\n\t\t\t// Do something\n\t\t\tbreak;\n    \tcase 'music-controls-seek-to':\n\t\t\tconst seekToInSeconds = JSON.parse(action).position;\n\t\t\tMusicControls.updateElapsed({\n\t\t\t\telapsed: seekToInSeconds,\n\t\t\t\tisPlaying: true\n\t\t\t});\n\t\t\t// Do something\n\t\t\tbreak;\n\n\t\t// Headset events (Android only)\n\t\t// All media button events are listed below\n\t\tcase 'music-controls-media-button' :\n\t\t\t// Do something\n\t\t\tbreak;\n\t\tcase 'music-controls-headset-unplugged':\n\t\t\t// Do something\n\t\t\tbreak;\n\t\tcase 'music-controls-headset-plugged':\n\t\t\t// Do something\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n}\n\n// Register callback\nMusicControls.subscribe(events);\n\n// Start listening for events\n// The plugin will run the events function each time an event is fired\nMusicControls.listen();\n```\n\n- Toggle play/pause:\n```javascript\nMusicControls.updateIsPlaying(true); // toggle the play/pause notification button\nMusicControls.updateDismissable(true);\n```\n\n- iOS Specific Events:\nAllows you to listen for iOS events fired from the scrubber in control center.\n```javascript\nMusicControls.updateElapsed({\n\telapsed: 208, // seconds\n\tisPlaying: true\n});\n```\n\n## List of media button events \n- Default:\n```javascript\n'music-controls-media-button'\n```\n\n- Android only:\n```javascript\n'music-controls-media-button-next', 'music-controls-media-button-pause', 'music-controls-media-button-play',\n'music-controls-media-button-play-pause', 'music-controls-media-button-previous', 'music-controls-media-button-stop',\n'music-controls-media-button-fast-forward', 'music-controls-media-button-rewind', 'music-controls-media-button-skip-backward',\n'music-controls-media-button-skip-forward', 'music-controls-media-button-step-backward', 'music-controls-media-button-step-forward',\n'music-controls-media-button-meta-left', 'music-controls-media-button-meta-right', 'music-controls-media-button-music',\n'music-controls-media-button-volume-up', 'music-controls-media-button-volume-down', 'music-controls-media-button-volume-mute',\n'music-controls-media-button-headset-hook'\n```\n\n- iOS Only:\n```javascript\n'music-controls-skip-forward', 'music-controls-skip-backward'\n```\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/homerours/cordova-music-controls-plugin.git"
  },
  "version": "2.1.4"
}
